#!/bin/sh


source ~/scr/sid-ip
echo The IP address of the Debian machine is $DEBIANSID


echo Configure the package.
echo If this runs without errors, it means that the package is configurable.
./configure
if [ $? -ne 0 ]; then exit; fi


echo Remove macOS clutter.
echo This includes the macOS extended attributes.
echo The attributes make their way into the tarball,
echo get unpacked within Debian,
echo and cause lintian errors.
find . -name .DS_Store -delete
rm -rf autom4te.cache
xattr -r -c *
if [ $? -ne 0 ]; then exit; fi


echo Create a tarball.
make dist
if [ $? -ne 0 ]; then exit; fi


echo Clean the Debian builder and copy the tarball to it.
ssh $DEBIANSID "rm -rf bibledit*"
if [ $? -ne 0 ]; then exit; fi
scp *.gz $DEBIANSID:.
if [ $? -ne 0 ]; then exit; fi


echo Clean the working tree in the repository.
make distclean
if [ $? -ne 0 ]; then exit; fi


echo Rename the source tarball to the non-native scheme.
ssh $DEBIANSID "rename 's/cloud-/cloud_/g' bibledit*gz"
if [ $? -ne 0 ]; then exit; fi
ssh $DEBIANSID "rename 's/tar/orig.tar/g' bibledit*gz"
if [ $? -ne 0 ]; then exit; fi


echo Unpack and remove the tarball in Debian.
ssh $DEBIANSID "tar xf bibledit*gz"
if [ $? -ne 0 ]; then exit; fi


echo Build the Debian packages.
ssh $DEBIANSID "cd bibledit*[0-9]; debuild -us -uc"
if [ $? -ne 0 ]; then exit; fi
exit

echo Removing any previous build artifacts.
ssh $DEBIANSID "rm bibledit*" 2>/dev/null


echo Build the Debian source package.
ssh -tt $DEBIANSID "cd bibledit*[0-9]; debuild -S -sa"
if [ $? -ne 0 ]; then exit; fi


